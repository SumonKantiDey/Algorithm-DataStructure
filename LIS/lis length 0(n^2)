//Time complexity 0(n^2)
///ref http://shakilcompetitiveprogramming.blogspot.com/search/label/DP
#include<bits/stdc++.h>

using namespace std;
const int NX = 1000; // লিমিট
int LIS[ NX + 5 ] , input[ NX + 5 ], n ;
void solve()
{
    scanf("%d",&n); // সিকুয়েন্স লেংথ
    for( int i = 0 ; i < n ; i++ )
    {
        scanf("%d",&input[i]); // ইনপুট সিকুয়েন্স
    }
    int ans = 0 ;
    for( int i = 0 ; i < n ; i++ )
    {
        LIS[i] = 1 ;
        for( int j = i - 1; j >= 0 ; j-- )
        {
            if( input[j] < input[i] ) // আগের কোন নাম্বার আমাদের বর্তমান নাম্বার থেকে ছোট
            {
                LIS[i] = max( LIS[i] , LIS[j] + 1 );
            }
        }
       ans = max( ans , LIS[i]); // চেক আপডেট আন্সার
       //cout<<ans<<endl;
    }
    cout<<"Maximum length of the sequence is: "<<ans<<endl;
}
int main()
{
    int n;
    cout<<"Test case :"<<endl;
    cin>>n;
    while(n--){
    solve();
    }
}
/**
Test case :
1
4
-1 2 1 3
Maximum length of the sequence is: 3
**/
