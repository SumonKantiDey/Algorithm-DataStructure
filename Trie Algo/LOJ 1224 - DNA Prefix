//http://www.lightoj.com/volume_showproblem.php?problem=1224
#include<bits//stdc++.h>
using namespace std;

int get_id(char ch)
{
    if(ch == 'A') return 0;
    if(ch == 'C') return 1;
    if(ch == 'G') return 2;
    else return 3;
}

struct node{
    int endmark;
    node *next[4];
    node()
    {
        endmark = 0;
        for(int i = 0; i < 4; i++)
            next[i] = NULL;
    }
} *root;

void insert(char *str,int len)
{
    node *curr = root;
    for(int i = 0; i < len; i++){
        int id = get_id(str[i]);
        if(curr->next[id] == NULL){
           curr->next[id] = new node();
        }
        curr = curr->next[id];
        curr->endmark += 1;
      //  cout << curr->endmark <<endl;
    }
}
int dfs(node *curr = root,int depth = 0)
{
    int maxn = depth * curr->endmark;
    for(int i = 0; i < 4 ; i++){
        if(curr->next[i] != NULL){
           maxn = max(maxn,dfs(curr->next[i],depth + 1));
        }
    }
    return maxn;
}
void del(node* cur)
{
    for(int i = 0; i < 4; i++){
        if(cur->next[i]){
           del(cur->next[i]);
        }
    }
    delete(cur);
}
int main()
{
    int t;
    cin >> t;
    for(int cs = 1; cs <= t; cs++){
        root = new node();
        int n;
        cin >> n;
        for(int i = 1; i<= n; i++){
            char str[50];
            scanf("%s",str);
            insert(str,strlen(str));
        }
        printf("Case %d: %d\n",cs,dfs());
        del(root);//destroyed the Trie
    }
    return 0;
}

