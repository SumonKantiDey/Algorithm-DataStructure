//Time complexity 0(nlogn)
#include<bits/stdc++.h>
using namespace std;
void merge(int ara[],int l,int m,int r)
{
    //cout << l << "  " << m << "  " << r << endl;
    int i,j,k;
    int n1 = m-l+1;
    int n2 = r-m;

    int L[n1],R[n2];

    //Left sub array
    for(i=0; i<n1; i++)
        L[i] = ara[l+i];

    //Right sub array
    for(j=0; j<n2; j++)
        R[j] = ara[m+1+j];

    i = j = 0;
    k = l;

    while(i < n1 && j < n2)
    {
        if(L[i] <= R[j]){
           ara[k] = L[i];
           i++;
        }
        else{
           ara[k] = R[j];
           j++;
        }
        k++;
    }
    //Remaining left sub array
    while(i<n1)
    {
        ara[k] = L[i];
        i++;
        k++;
    }
    
    //Remaining right sub array
    while(j<n2)
    {
        ara[k] = R[j];
        j++;
        k++;
    }
}
void mergesort(int ara[],int l,int r)
{
    if(l<r){
       int m  = l+(r-l)/2;
       mergesort(ara,l,m);
       mergesort(ara,m+1,r);
       merge(ara,l,m,r);
    }
}
int main()
{
    int n;
    cin>>n;
    int ara[n];
    cout<<"Given array is: "<<endl;
    for(int i=0; i<n; i++)cin>>ara[i];

    mergesort(ara,0,n-1);
    cout<<"Sorted array is: "<<endl;
    for(int i=0; i<n; i++)cout<<ara[i]<<" ";
    return 0;
}
