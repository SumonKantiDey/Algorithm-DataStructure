#include<bits/stdc++.h>
using namespace std;
struct node{
    int data;
    node* next;
    node* prev;
};
 node* head;
 ///Creats a node and return a pointer to it
 struct node* GetNewNode(int x){
     node* newnode = new node();
     newnode->data = x;
     newnode->prev = NULL;
     newnode->next = NULL;
     return newnode;
 };
 ///Insert a node at Head of a doubly link list
 void InsertAtHead(int x){
    node* newnode = GetNewNode(x);
    if(head == NULL){
        head = newnode;
        return;
    }
    head->prev = newnode;
    newnode->next = head;
    head = newnode;
 }
 ///Insert a Node at Tail of doubly link list
 void InsertAtTail(int x){
       node* temp = head;
       node* newnode = GetNewNode(x);
       if(head == NULL){
        head = newnode;
        return;
       }
       while(temp->next != NULL)temp = temp->next;
       temp->next = newnode;
       newnode->prev = temp;
 }
 ///prints all element of doubly link list in forward traversal
 void Print(){
   node* temp = head;
   cout<<"Forward :";
   while(temp != NULL){
    cout<<" "<<temp->data;
    temp = temp->next;
   }
   cout<<endl;

 }
 ///prints all element of doubly link list in reverse traversal
 void ReversePrint(){
    node* temp = head;
    if(temp == NULL)return;//empty list
    //Going to the last node
    while(temp->next != NULL){
        temp = temp->next;
    }
    cout<<"Reverse :";
    while(temp != NULL){
        cout<<" "<<temp->data;
        temp = temp->prev;
    }
    cout<<endl;

 }
 int main()
 {
     head = NULL;///empty list set head is NULL
     InsertAtTail(2);Print();ReversePrint();
     InsertAtTail(4);Print();ReversePrint();
     InsertAtHead(6);Print();ReversePrint();
     InsertAtHead(8);Print();ReversePrint();
     InsertAtTail(10);Print();ReversePrint();
 }
