/** Insert a value at Nth position and delete of a link list **/
//ref https://www.youtube.com/watch?v=IbvsNF22Ud0
#include<bits/stdc++.h>

using namespace std;
struct node{
   int data;
   node* next;
};
node* head;
void insertation(int data,int pos)
{
    node* temp1 = new node();
    temp1->data = data;
    temp1->next = NULL;
    if(pos == 1)
    {
        temp1->next = head;
        head = temp1;
        return;
    }
    node* temp2 = head;//as we add a node so we should identify root node here
    for(int i=0; i<pos-2; i++){
        temp2 = temp2->next;
    /** if we want add node at nth position we should find nth previous
     node as temp2 indicate first node then loop is continue <pos-2
     suppose we want to add node at 3th position so we should go 2nd position
     as temp2 indicate 1th position as head node then loop turn only 1 when i==0
    (pos=3,(pos-2)=1)then we can reach 2nd node **/
    }
    temp1->next = temp2->next;
    temp2->next = temp1;
}
void print()
{
    node *temp = head;
    cout<<"List is :";
    while(temp != NULL){
        cout<<temp->data<<" ";
        temp = temp->next;
    }
    cout<<endl;
}
void delate(int p)
{
  node* temp1 = head;
  if(p == 1){
    head = temp1->next;
    free(temp1);
    return;
  }
  for(int i=0; i<p-2; i++)
  {
      temp1 = temp1->next;
  }
  node* temp2 = temp1->next;
  temp1->next = temp2->next;
  free(temp2);
}
int main()
{
     head = NULL;
     cout<<"How many numbers :"<<endl;
     int n,num,x;
     string command;
     cin>>n;
     for(int i=0; i<n; i++)
     {
        cout<<"Given a number and position :"<<endl;
        cin>>num>>x;
        insertation(num,x);
        print();
     }
           cout<<"Given delete position :"<<endl;
             cin>>n;
             delate(n);
             print();

    return 0;
     }
/**
input output:
    
How many numbers :
3
Given a number and position :
10 1
List is :10
Given a number and position :
20 2
List is :10 20
Given a number and position :
30 3
List is :10 20 30
Given delete position :
2
List is :10 30
**/
